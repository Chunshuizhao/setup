set nocompatible              " be iMproved, required
filetype off                  " required
set rtp+=/etc/vim/bundle/Vundle.vim
call vundle#begin('/etc/vim/bundle/Vundle.vim')
Plugin 'gmarik/Vundle.vim'
Plugin 'vim-scripts/Conque-GDB'
Plugin 'altercation/vim-colors-solarized'
Plugin 'amsword/YouCompleteMe'
Plugin 'rdnetto/YCM-Generator'
Plugin 'oplatek/Conque-Shell'
Plugin 'amsword/comments.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'git://git.wincent.com/command-t.git'
Plugin 'mkitt/tabline.vim'
call vundle#end()            " required


set wrap
set nocp
inoremap jk <ESC>
filetype plugin on
syntax on
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4
set tw=79
"set foldmethod=syntax
map <F2> :retab <CR> :wq! <CR>
let g:netrw_localrmdir="rm -r"
set nowrap
"set statusline+=%F
set laststatus=2
set tags+=~/.vim/tags/cpp
set tags+=./tags
set number
let g:neocomplcache_enable_at_startup = 1
nnoremap <silent> <Leader>df :call DiffToggle()<CR>

function! DiffToggle()
	if &diff
		diffoff
	else
		diffthis
	endif
:endfunction

if executable('ag')
    " Note we extract the column as well as the file and line number
    set grepprg=ag\ --nogroup\ --nocolor\ --column
    set grepformat=%f:%l:%c%m
endif

set autoindent
set cindent
set hidden
set hlsearch 
augroup filetype
  au! BufRead,BufNewFile *.proto setfiletype proto
augroup end

nmap t% :tabedit %<CR>
nmap td :tabclose<CR>

"color ron 
syntax enable
set background=dark
colorscheme solarized
set modifiable
let mapleader=","
set backspace=indent,eol,start
let g:ConqueTerm_ReadUnfocused = 1
noremap <leader>m :MaximizerToggle<CR>

function! Tab_Or_Complete()
	if col('.')>1 && strpart( getline('.'), col('.')-2, 3 ) =~ '^\w'
	return "\<C-N>"
	else
	return "\<Tab>"
	endif
	endfunction
	:inoremap <Tab> <C-R>=Tab_Or_Complete()<CR>
	:set dictionary="/usr/dict/words"

nmap ,lcd :lcd %:p:h<CR>

let g:CommandTMaxFiles=500000
let g:CommandTWildIgnore=&wildignore . ",*.o" . ",*.pyc"

let g:ConqueGdb_Leader = '\'
let g:ConqueGdb_DeleteBreak = g:ConqueGdb_Leader . 'd'
set wrap
let g:ycm_server_keep_logfiles = 1
let g:ycm_server_log_level = 'debug'
nnoremap <leader>jd :YcmCompleter GoTo<CR>


let g:netrw_sizestyle= "h"
filetype plugin indent on    " required

